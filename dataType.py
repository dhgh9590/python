# print(a) 값을 프린트 함
# print(type(a)) 데이터 타입을 프린트함

# 타입
# int = 정수 / float = 실수 / str = 문자열

# 숫자 자료형
# 나누기는 /를 1개만 사용하고 몫을 구할때는 //를 2개 사용함
# 나머지를 구할려면 값%값를 하면 나머지 값을 구할 수 있음


# 문자열 자료형
# 문자를 작성할때는 '문자',"문자","""문자""" 형식으로 ""로 문자를 감싸면됨
# ''안에 '이 있다면 에러가 남 / 해결방법은 \' 를 사용하면 문자'로 인식함
# 여러줄로 이루어진 문자열은 "" 안에 \n을 넣으면 한줄씩 띄워줌
# /를 넣고 싶으면 /를 2개 사용하면 됨
# 문자열 사이의 탭 간격은 \t를 사용함
# """문자"""를 사용하면 엔터를 인식함(줄 띄움)
# print(문자 * 100) 을하면 문자를 100번 곱해줌

# 문자열 인덱싱
# print(a[0])을 하면 해당하는 문자열의 0번째 값을 가지고 옴 / -1을 하면 역순으로 값을 가지고 옴(제일 끝자리 문자)

# 문자열 슬라이싱
# print(a[0:4])는 문자열 0번째부터 4번째 미만인 값을 가지고 옴 / a[이상:미만:간격] / 각각의 값은 생략가능

# 문자열 포맷팅
# number = 10 / day = "three"
# 방법1 / a = "I eat %d apples. so I was sick for %s days." % (number,day)를 하면 %d와 %s자리에 각각 number,day를 넣는것과 같음
# %s = 문자열 / %c = 문자1개 / %d = 정수 / %f = 부동소수 /%s는 문자열로 변경되기때문에 모든 값에 사용가능
# 방법2 / a = "asdasd asd {age} asdasd  dasdasd {name} asdasd ".format(name="아이유",age=30)를 하면 name 자리에 아이유가 들어감 / 이 방법은 변수의 순서가 상관없음
# 방법3
# name = "아이유"
# a = f"나의 이름은 {name} 입니다" f는 .format을 생략

# 소수점 표현
# a = "%0.4f" % 3.146541165 / 0.4는 소수점 0번째부터 4번째 이하 까지를 보여줌

# 문자열 개수 세기(count)
# a = "hobby"
# a.count("b") 는 b가 몇개인지 세줌

# 문자열에서 특정 값 찾기(find)
# a = "hobby"
# a.find("b") 는 가장먼저 나오는 b가 몇번째 자리에 있는지 알려주고 리턴함 / 없는 값을 넣으면 -1을 반환함

# 문자열에서 특정 값 위치 찾기(index)
# a = "hobby"
# a.index("b") 값이 있으면 몇번째 인덱스인지 값을 반환하고 리턴 / 없으면 에러를 띄움

# 소문자를 대문자로 변경
# a = "hobby"
# a.lower()

# 대문자를 소문자로 변경
# a = "hobby"
# a.upper()

# 공백 제거
# a = "   hi   "
# a.strip()

# 문자열 바꾸기
# a = "Life is too short"
# a.replace("Life", "Your leg") 는 Life를 Your leg로 변경해줌

# 문자열 나누기
# a = "Life is too short"
# a.split() 는 문자열의 띄어쓰기 기준으로 배열형태로 만들어줌 / ["Life","is","too","short"]

# 리스트(배열)
# a = ["아이유","수지","권나라"] 하나의 변수에 값여러개를 저장 / 리스트 안에 리스트를 넣을수 있고 숫자와 문자를 같이 넣을 수 있음
# a[0] 를 하면 배열첫번째 값을 반환
# 리스트 슬라이스 / a[0:3]를 하면 리스트의 0번째 부터 3번째 미만의 값을 반환
# 리스트 값 세기 / a.count("아이유")를 하면 아이유가 몇개인지 갯수를 반환
# 리스트 값 변경 / a[0] = "혜리" 를 하면 0번째 값이 혜리로 변경됨
# 리스트 값 연속 변경 / a[0:2] = ["김유정","신세경"] 를 하면 리스트의 0번째 부터 2번째 미만의 값을 김유정,신세경으로 변경함
# 리스트 삭제1 / a[0] = [] 빈 배열을 넣게 되면 삭제됨 / 여러개 삭제시 슬라이스를 사용하면됨
# 리스트 삭제2 / del a[0]
# 리스트 값 추가(append) / a.append("신민아") 를 하면 리스트 마지막에 신민아를 추가해줌
# 리스트 정렬 / a.sort() 는 문자는 알파벳 ,숫자는 크기순으로 정렬됨
# 리스트 정렬 뒤집기 / a.reverse() 값을 반대로 정렬
# 리스트 값찾기(index) / a.index("아이유") 는 값이 있다면 위치를 반환함
# 리스트 특정 인덱스에 값 추가 / a.insert(0,"오연서")를 하게되면 0번째에 오연서를 추가해줌
# 리스트 값 지우기 / a.remove("아이유")를 하면 첫번째 아이유 값을 삭제함
# 리스트 안에 리스트 추가 / a.extend(["신세경","신민아"])를 하게되면 기존 리스트안에 값을 추가함
# 리스트 안의 마지막 값을 꺼내 버리고 없셈 / a.pop() 을 사용하면 리스트의 마지막 값을 반환하고 없셈

# 튜플(값을 변경할 수 없음)
# t1 = (1, 2, 'a', 'b')
# del t1[0] / 삭제,추가시 오류 발생
# 인덱싱과 슬라이싱은 가능 함

# 딕셔너리(객체와 같음)
# dic = {'name': 'Eric',} / 선언 방법
# dic['age'] = 15 / 새로운 값 추가
# print(dic["name"]) / 딕셔너리의 특정 값만 호출1 / 없는 값을 찾을때 에러 발생
# print(dic.get(1)) / 딕셔너리의 특정 값만 호출2 / 없는 값을 찾을때 None값을 반환
# print(4 in dic) / dic에 4라는 키가 있냐? / 딕셔너리의 특정 값이 있냐 없냐를 확인할때 사용 / true,false 반환됨
# del dic["name"] / 딕셔너리 값 삭제
# 키는 중복선언 되면 안됨
# print(dic.keys()) / 키들만 따로 뽑음
# print(dic.values()) / 값들만 따로 뽑음
# print(dic.items()) / 새로운 배열안으로 값을 넣음
# dic.clear() / 딕셔너리의 모든 값이 비어짐

# 집합(중복을 허용하지 않음,순서가 없음)
# s1 = set([1, 2, 3]) / 선언 방법1
# s2 = {1, 2, 3} / 선언 방법2

# 집합은 중복된 값을 삭제할때 많이 사용됨 / 문자열도 해당됨(순서x,중복x)
# l = [1, 1, 2, 2, 3, 3,]
# newList = set(l)

# 교집합을 사용해서 중복되는 값 찾기
# s1 = set([1, 2, 3, 4, 5, 6])
# s2 = set([4, 5, 6, 7, 8, 9])
# print(s1 & s2) or print(s1.intersection(s2))

# 합집합을 사용해서 중복되는 값을 제거 하고 출력함
# s1 = set([1, 2, 3, 4, 5, 6])
# s2 = set([4, 5, 6, 7, 8, 9])
# print(s1 | s2)

# 차집합을 이용해서 중복되는 값 빼기고 한쪽의 값을 반환
# s1 = set([1, 2, 3, 4, 5, 6])
# s2 = set([4, 5, 6, 7, 8, 9])
# print(s1 - s2) / 중복되는 값을 제거하고 왼쪽에 있는 나머지 값을 반환
# print(s2.difference(s1)) / 중복되는 값을 제거하고 오른쪽에 있는 나머지 값을 반환

# 집합에 값 추가,제거
# s1 = set([1, 2, 3, 4, 5, 6])
# s1.add(7) / 값 하나를 추가
# s1.update([8, 9, 10]) / 여러 값을 추가
# s1.remove(1) / 1이라는 값을 제거

# boolean(첫 글자는 대문자 사용)
# a = True
# b = False

# 변수
# from copy import copy
# a = [1, 2, 3]
# b = a[:] / 슬라이싱 해서 넣으면 값 복사를 함
# b = copy(a) / copy 라는 라이브러리로 값 복사하기
# a, b = ('python', 'life') 변수 할당1 / 2개의 값을 각각 할당
# [a, b] = ['python', 'life'] 변수 할당2 / 2개의 값을 각각 할당
# a = b = 'hello / a와b에 hello 주소값을 할당함

# 2개의 변수 값을 서로 변경
# a = 3
# b = 5
# a, b = b, a / a에 b를 항당,b에 a를 할당
